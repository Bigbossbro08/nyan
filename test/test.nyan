# test nyan file

Dummy():
    ...

First():
    # a first object!
    member : int = 15
    test : text = "rofl lol"
    bla : file = "wtf.h4x"

FirstPatch<First>():
    member += 3

Second(First):
    pass

NestingBase(First):

    setmember : set(int) = {1,2,3,4,
                            5,6,7,}

    member = 2

    SomeChild(Dummy):
        pass

    AnotherChild(SomeChild):
        setmember : set(int) = {
            1,2,3,
            4,5,6
        }

    anothermember : set(int) = {1,2,
                                3,4,5}

Fourth(First):
    guenther : int = 1337

Third(First):
    rolf : int = 42
    dieter : set(First) = {First, Second, Fourth}

Test(Second):
    member += 1337
    gschicht : int = 0

NewParent():
    new_value : int = 0

Patch<Test>[+NewParent]():
    moarstuff : int = 10
    gschicht = 235
    member += 1
    wtf : float = 13374242.0
    ie : First = First

PatchPatch<Patch>():
    member /= 15
    ie = Third

SetTest():
    member : set(int) = {1, 1, 2, 3, 1}
    # o{} for orderedset
    orderedmember : orderedset(int) = <1, 2, 3, 1, 2, 3, 2>

# importing!
import imported as imp
import stuff.file

import test

UseImported(imp.ImportedObject):
    it_works += 10

Bla():
    AnotherTest<test.Bla>():
        ...

    Test<imp.ImportedObject>():
        ...
    ...
